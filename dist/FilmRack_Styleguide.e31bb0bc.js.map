{"version":3,"sources":["index.js"],"names":["allLinks","document","querySelectorAll","pageContent","getElementById","window","onload","event","console","log","preventDefault","onRouteChange","onunload","Array","from","forEach","link","addEventListener","evt","history","pushState","target","href","pathName","URL","location","pathname","content","innerHTML","cardAnimation","card","getElementsByClassName","shortDescription","extended","actors","upvote","downvote","i","count","classList","remove","add","style","display","length"],"mappings":"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","file":"FilmRack_Styleguide.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\nconst allLinks = document.querySelectorAll('a')\nconst pageContent = document.getElementById('content')\n\n  window.onload = (event) => {\n    console.log('reloaded')\n    event.preventDefault()\n    onRouteChange()\n  }\n\n  window.onunload = (event) => {\n    console.log('unloaded')\n    event.preventDefault()\n  }\n  \n  \n\nArray.from(allLinks).forEach((link) => {\n    link.addEventListener('click', (evt) => {\n      evt.preventDefault()\n      history.pushState(null, 'Quiz', evt.target.href)\n      onRouteChange()\n    })\n  })\n  \n  const onRouteChange = () => {\n    const pathName = new URL(window.location).pathname\n\n    if (pathName === '/einleitung') {\n        const content = `\n            <h1> Einleitung </h1>\n            <h2> MovieNights </h2>\n            <p>Dieser Styleguide stellt die Grundlage für die Website <a href=\"#\"> MovieNights </a> dar. MovieNights ist eine Plattform auf der Filmliebhaber gemeinsam mit ihren Freunden Filmabende organisieren können. </p>\n            <h2> Ziele des Styleguides </h2>\n            <ul>\n                <li>konsitentes Design</li>\n                <li>konsistentes und skalierbares CSS</li>\n                <li>schneller und effizienter Einsatz von UI-Komponenten</li>\n            </ul>\n            <h2>Bereiche des Styleguides</h2>\n            <h3>Brand Guide</h3>\n            <p> Beschreibt Richtlinien bezüglich der Typographie und der Farbgestaltung. </p>\n            <h3>CSS-Methodologie</h3>\n            <p> Beschreibt wie wir CSS modular, wiederverwendbar und skalierbar gestaltet werden kann. </p>\n            <h3>Component Library</h3>\n            <p> Zeigt verschiedenste UI-Komponenten mit Code-Beispielen, Visueller Darstellung und Erläuterung der Anwendung  </p>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n\n    else if (pathName === '/farben') {\n        const content = `\n            <h1> Farben </h1>\n            <p>\n            <span>\n            </span>\n            </p>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n    else if (pathName === '/typographie') {\n        const content = `\n            <h1> Typographie </h1>\n            <h2>Überschriften</h2>\n            <p>\n                Als überschrift Font wird lato verwendet.\n                In SCSS unter $heading-font\n            </p>\n            <h2>Fliestext</h2>\n            <p>\n                Als überschrift Font wird Open Sans verwendet.\n                In SCSS unter $main-font\n            </p>\n            <h2>Überschriften</h2>\n            <p>\n                Als überschrift Font wird Monoton verwendet. Diese Strahlt den alten Kino Vibe aus\n                In SCSS unter $brand-font\n            </p>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n    else if (pathName === '/code') {\n        const content = `\n            <h1> Code-Konventionen </h1>\n\n            <h2> Datei Struktur </h2>\n            <p> Die Dateistruktur orientiert sich an dem 7-1 Pattern.\n            Das bedeutet wir haben eine main.scss Datei, welche \n            mehrere andere scss-Datein importiert, welche sich\n            in verschiedenen Ordnern befinden. </p>\n\n            <p>Da MovieNights ein eher kleineres Projekt ist, müssen\n            nicht alle 7 Folder exakt übernommen werden.\n            Nicht verzichtet wird jedoch auf folgende Ordner: </p>\n\n            <h3>base</h3>\n            <p>Beinhaltet styles, die für das gesamte Projekt gelten (zB reset.scss, typography.scss)</p>\n            <h3>components</h3>\n            <p>Beinhaltet Stylesheets für die einzelnen Komponenten</p>\n            <h3>layout</h3>\n            <p>Beinhaltet Styles für footer/header oder Navigation</p>\n            <h3>utils</h3>\n            <p>Beinhaltet alle sass variablen und somit auch vordefinierte Farben/Schriften etc.</p>\n\n            <h2>Reset.css</h2>\n            <p> Wir verwenden ein Reset CSS von https://meyerweb.com/eric/tools/css/reset/</p>\n            <p> Das Reset.css dient dazu, einige vordefinierten Styles der verschiedenen Browser zurückzusetzten,\n            um so universalität zu erreichen und selbstständig styles erstellen zu können.</p>\n\n            <h2>box-sizing: border-box</h2>\n            <p>Wir verwenden box-sizing: border-box, damit werden bei der Breite und bei der Höhe der Elemente\n            die paddings/margins/borders mit berücksichtigt. Das kann das Styling sehr erleichtern.</p>\n\n            <h2>SASS</h2>\n            <p>Wir verwenden Sass aufgrund der vielen Vorteile, die Sass bietet. Vorteile sind vor allem\n            das erstellen von Variablen und das Verschachteln von Selektoren.</p>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n    else if (pathName === '/naming') {\n        const content = `\n            <h1> Naming Conventions </h1>\n            <p>Um ein einheitliches Naming zu garantieren, werden die <a href=\"http://getbem.com/introduction/\">BEM</a> Naming Conventions befolgt. \n            BEM (Block-Element-Modifiers) ist ein simpler, leicht verständlicher und Intuitive Variante für Naming Conventions.\n            Hierbei wird in blöcke, Elemente der Blöcke und Modifiers unterteilt.</p>\n            <h2>Blöcke</h2>\n            <p>Blöcke sind einzelstehende Komponenten</p>\n            <h2>Elemente</h2>\n            <p>Elemente sind teile von Bläcken. Als Elemente können einzelne Punke(<li>) von Menüs bezeichnet werden</p>\n            <h2>Modifiers</h2>\n            <p>Modifiers sind Zustände der Elemente. Man kann diese nutzen, um beispielweise ein element den Zustand \"hidden zu geben\"</p>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n    else if (pathName === '/ueberschriften') {\n        const content = `\n            <h1> Überschriften </h1>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n    else if (pathName === '/navigation') {\n        const content = `\n            <h1> Navigation </h1>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n    else if (pathName === '/links') {\n        const content = `\n            <h1> Links </h1>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n    else if (pathName === '/buttons') {\n        const content = `\n            <h1> Buttons </h1>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n    }\n\n\n    else if (pathName === '/movie-Cards') {\n        const content = `\n            <h1> Movie Cards </h1>\n\n            <div class=\"container\">\n            <div class=\"moviecard\">\n                <h3 class=\"moviecard__rank\">Platz 6</h3>\n                <div class=\"moviecard__background\">\n                    <img class=\"moviecard__media\" src=\"images/Jumpstreet.PNG\" alt=\"Movie\">\n                    <div class=\"moviecard__content\">\n                        <p class=\"moviecard__time\">1 Std. 49 Min.</p>\n                        <h1 class=\"moviecard__title\">21 Jumpstreet</h1>\n                        <p class=\"moviecard__data\">2012 FSK-12 Action-Comedy-Crime</p>\n                        <p class=\"moviecard__short_description moviecard__shortdescription--visible\">A pair of underachieving cops are sent back to a local high school\n                        to blend in. </p> \n                        <div class=\"moviecard__extended moviecard__extended--invisible\">\n                            <p class=\"moviecard__long_description\">A pair of underachieving cops are sent back to a \n                            local high school to blend in and bring down a synthetic drug ring. \n                            The pair plays police officers who must go undercover in a high school to bust a drug ring, just like Johnny Depp in the original series.\n                            <p class=\"moviecard__directors\">Directors: Phil Lord, Christopher Miller</p>\n                            <p class=\"moviecard__actors\">Actors: Jonah Hill, Channing Tatum, Brie Larson </p>\n                        </div>\n                    </div>\n                    <div class=\"moviecard__folder moviecard__folder--upfolded\">AUSKLAPPEN</div>\n                </div>\n            </div>\n    \n    \n            <div class=\"moviecard\">\n                <h3 class=\"moviecard__rank\">Platz 6</h3>\n                <div class=\"moviecard__background\">\n                    <img class=\"moviecard__media\" src=\"images/Jumpstreet.PNG\" alt=\"Movie\">\n                    <div class=\"moviecard__content\">\n                        <p class=\"moviecard__time\">1 Std. 49 Min.</p>\n                        <h1 class=\"moviecard__title\">21 Jumpstreet</h1>\n                        <p class=\"moviecard__data\">2012 FSK-12 Action-Comedy-Crime</p>\n                        <p class=\"moviecard__short_description moviecard__shortdescription--visible\">A pair of underachieving cops are sent back to a local high school\n                        to blend in. </p> \n                        <div class=\"moviecard__extended moviecard__extended--invisible\">\n                            <p class=\"moviecard__long_description\">A pair of underachieving cops are sent back to a \n                            local high school to blend in and bring down a synthetic drug ring. \n                            The pair plays police officers who must go undercover in a high school to bust a drug ring, just like Johnny Depp in the original series.\n                            <p class=\"moviecard__directors\">Directors: Phil Lord, Christopher Miller</p>\n                            <p class=\"moviecard__actors\">Actors: Jonah Hill, Channing Tatum, Brie Larson </p>\n                        </div>\n                    </div>\n                    <div class=\"moviecard__folder moviecard__folder--upfolded\">AUSKLAPPEN</div>\n                </div>\n            </div>\n        </div>\n        `\n        \n        pageContent.innerHTML = content\n        console.log(pageContent)\n\n        cardAnimation()\n    }\n  }\n\n \n//function cardAnimation(){\n\n//Script for the movie-card & Up-Down Votes\n\nconst card = document.getElementsByClassName('moviecard__folder')\nconst shortDescription = document.getElementsByClassName('moviecard__short_description')\nconst extended = document.getElementsByClassName('moviecard__extended')\nconst actors = document.getElementsByClassName('moviecard__actors')\n\nconst upvote = document.getElementsByClassName('vote__upvote')\nconst downvote = document.getElementsByClassName('vote__downvote')\n\nconsole.log(shortDescription)\n\nfor (let i = 0; i < card.length; i++){\n    let count = i;\n    card[count].addEventListener(\"click\", () => {\n\n        if(card[count].innerHTML === \"AUSKLAPPEN\"){\n        \n        shortDescription[count].classList.remove(\"moviecard__short_description--visible\")\n        shortDescription[count].classList.add(\"moviecard__short_description--invisible\")\n\n        extended[count].classList.remove(\"moviecard__extended--invisible\")\n        extended[count].classList.add(\"moviecard__extended--visible\")\n\n        actors[count].style.display = \"block\"\n\n        card[count].innerHTML = \"EINKLAPPEN\"\n\n        }else{\n\n        shortDescription[count].classList.add(\"moviecard__short_description--visible\")\n        shortDescription[count].classList.remove(\"moviecard__short_description--invisible\")\n\n        extended[count].classList.add(\"moviecard__extended--invisible\")\n        extended[count].classList.remove(\"moviecard__extended--visible\")\n\n        card[count].innerHTML = \"AUSKLAPPEN\"\n\n        actors[count].style.display = \"none\"\n\n        }\n        \n        \n    })\n\n\n\n}\n\n//}"]}